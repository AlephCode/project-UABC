package com.uabc.proyecto.themeswitcher

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.ui.graphics.Color

val lightIndependenciaScheme = lightColorScheme(
    primary                  = independence_primaryLight,
    onPrimary                = independence_onPrimaryLight,
    primaryContainer         = independence_primaryContainerLight,
    onPrimaryContainer       = independence_onPrimaryContainerLight,
    secondary                = independence_secondaryLight,
    onSecondary              = independence_onSecondaryLight,
    secondaryContainer       = independence_secondaryContainerLight,
    onSecondaryContainer     = independence_onSecondaryContainerLight,
    tertiary                 = independence_tertiaryLight,
    onTertiary               = independence_onTertiaryLight,
    tertiaryContainer        = independence_tertiaryContainerLight,
    onTertiaryContainer      = independence_onTertiaryContainerLight,
    error                    = independence_errorLight,
    onError                  = independence_onErrorLight,
    errorContainer           = independence_errorContainerLight,
    onErrorContainer         = independence_onErrorContainerLight,
    background               = independence_backgroundLight,
    onBackground             = independence_onBackgroundLight,
    surface                  = independence_surfaceLight,
    onSurface                = independence_onSurfaceLight,
    surfaceVariant           = independence_surfaceVariantLight,
    onSurfaceVariant         = independence_onSurfaceVariantLight,
    outline                  = independence_outlineLight,
    outlineVariant           = independence_outlineVariantLight,
    scrim                    = independence_scrimLight,
    inverseSurface           = independence_inverseSurfaceLight,
    inverseOnSurface         = independence_inverseOnSurfaceLight,
    inversePrimary           = independence_inversePrimaryLight,
    surfaceDim               = independence_surfaceDimLight,
    surfaceBright            = independence_surfaceBrightLight,
    surfaceContainerLowest   = independence_surfaceContainerLowestLight,
    surfaceContainerLow      = independence_surfaceContainerLowLight,
    surfaceContainer         = independence_surfaceContainerLight,
    surfaceContainerHigh     = independence_surfaceContainerHighLight,
    surfaceContainerHighest  = independence_surfaceContainerHighestLight,
)

val darkIndependenciaScheme = darkColorScheme(
    primary                  = independence_primaryDark,
    onPrimary                = independence_onPrimaryDark,
    primaryContainer         = independence_primaryContainerDark,
    onPrimaryContainer       = independence_onPrimaryContainerDark,
    secondary                = independence_secondaryDark,
    onSecondary              = independence_onSecondaryDark,
    secondaryContainer       = independence_secondaryContainerDark,
    onSecondaryContainer     = independence_onSecondaryContainerDark,
    tertiary                 = independence_tertiaryDark,
    onTertiary               = independence_onTertiaryDark,
    tertiaryContainer        = independence_tertiaryContainerDark,
    onTertiaryContainer      = independence_onTertiaryContainerDark,
    error                    = independence_errorDark,
    onError                  = independence_onErrorDark,
    errorContainer           = independence_errorContainerDark,
    onErrorContainer         = independence_onErrorContainerDark,
    background               = independence_backgroundDark,
    onBackground             = independence_onBackgroundDark,
    surface                  = independence_surfaceDark,
    onSurface                = independence_onSurfaceDark,
    surfaceVariant           = independence_surfaceVariantDark,
    onSurfaceVariant         = independence_onSurfaceVariantDark,
    outline                  = independence_outlineDark,
    outlineVariant           = independence_outlineVariantDark,
    scrim                    = independence_scrimDark,
    inverseSurface           = independence_inverseSurfaceDark,
    inverseOnSurface         = independence_inverseOnSurfaceDark,
    inversePrimary           = independence_inversePrimaryDark,
    surfaceDim               = independence_surfaceDimDark,
    surfaceBright            = independence_surfaceBrightDark,
    surfaceContainerLowest   = independence_surfaceContainerLowestDark,
    surfaceContainerLow      = independence_surfaceContainerLowDark,
    surfaceContainer         = independence_surfaceContainerDark,
    surfaceContainerHigh     = independence_surfaceContainerHighDark,
    surfaceContainerHighest  = independence_surfaceContainerHighestDark
)

val lightHalloweenScheme = lightColorScheme(
    primary                  = halloween_primaryLight,
    onPrimary                = halloween_onPrimaryLight,
    primaryContainer         = halloween_primaryContainerLight,
    onPrimaryContainer       = halloween_onPrimaryContainerLight,
    secondary                = halloween_secondaryLight,
    onSecondary              = halloween_onSecondaryLight,
    secondaryContainer       = halloween_secondaryContainerLight,
    onSecondaryContainer     = halloween_onSecondaryContainerLight,
    tertiary                 = halloween_tertiaryLight,
    onTertiary               = halloween_onTertiaryLight,
    tertiaryContainer        = halloween_tertiaryContainerLight,
    onTertiaryContainer      = halloween_onTertiaryContainerLight,
    error                    = halloween_errorLight,
    onError                  = halloween_onErrorLight,
    errorContainer           = halloween_errorContainerLight,
    onErrorContainer         = halloween_onErrorContainerLight,
    background               = halloween_backgroundLight,
    onBackground             = halloween_onBackgroundLight,
    surface                  = halloween_surfaceLight,
    onSurface                = halloween_onSurfaceLight,
    surfaceVariant           = halloween_surfaceVariantLight,
    onSurfaceVariant         = halloween_onSurfaceVariantLight,
    outline                  = halloween_outlineLight,
    outlineVariant           = halloween_outlineVariantLight,
    scrim                    = halloween_scrimLight,
    inverseSurface           = halloween_inverseSurfaceLight,
    inverseOnSurface         = halloween_inverseOnSurfaceLight,
    inversePrimary           = halloween_inversePrimaryLight,
    surfaceDim               = halloween_surfaceDimLight,
    surfaceBright            = halloween_surfaceBrightLight,
    surfaceContainerLowest   = halloween_surfaceContainerLowestLight,
    surfaceContainerLow      = halloween_surfaceContainerLowLight,
    surfaceContainer         = halloween_surfaceContainerLight,
    surfaceContainerHigh     = halloween_surfaceContainerHighLight,
    surfaceContainerHighest  = halloween_surfaceContainerHighestLight
)

val darkHalloweenScheme = darkColorScheme(
    primary                  = halloween_primaryDark,
    onPrimary                = halloween_onPrimaryDark,
    primaryContainer         = halloween_primaryContainerDark,
    onPrimaryContainer       = halloween_onPrimaryContainerDark,
    secondary                = halloween_secondaryDark,
    onSecondary              = halloween_onSecondaryDark,
    secondaryContainer       = halloween_secondaryContainerDark,
    onSecondaryContainer     = halloween_onSecondaryContainerDark,
    tertiary                 = halloween_tertiaryDark,
    onTertiary               = halloween_onTertiaryDark,
    tertiaryContainer        = halloween_tertiaryContainerDark,
    onTertiaryContainer      = halloween_onTertiaryContainerDark,
    error                    = halloween_errorDark,
    onError                  = halloween_onErrorDark,
    errorContainer           = halloween_errorContainerDark,
    onErrorContainer         = halloween_onErrorContainerDark,
    background               = halloween_backgroundDark,
    onBackground             = halloween_onBackgroundDark,
    surface                  = halloween_surfaceDark,
    onSurface                = halloween_onSurfaceDark,
    surfaceVariant           = halloween_surfaceVariantDark,
    onSurfaceVariant         = halloween_onSurfaceVariantDark,
    outline                  = halloween_outlineDark,
    outlineVariant           = halloween_outlineVariantDark,
    scrim                    = halloween_scrimDark,
    inverseSurface           = halloween_inverseSurfaceDark,
    inverseOnSurface         = halloween_inverseOnSurfaceDark,
    inversePrimary           = halloween_inversePrimaryDark,
    surfaceDim               = halloween_surfaceDimDark,
    surfaceBright            = halloween_surfaceBrightDark,
    surfaceContainerLowest   = halloween_surfaceContainerLowestDark,
    surfaceContainerLow      = halloween_surfaceContainerLowDark,
    surfaceContainer         = halloween_surfaceContainerDark,
    surfaceContainerHigh     = halloween_surfaceContainerHighDark,
    surfaceContainerHighest  = halloween_surfaceContainerHighestDark
)

val lightSanValentinScheme = lightColorScheme(
    primary                  = valentine_primaryLight,
    onPrimary                = valentine_onPrimaryLight,
    primaryContainer         = valentine_primaryContainerLight,
    onPrimaryContainer       = valentine_onPrimaryContainerLight,
    secondary                = valentine_secondaryLight,
    onSecondary              = valentine_onSecondaryLight,
    secondaryContainer       = valentine_secondaryContainerLight,
    onSecondaryContainer     = valentine_onSecondaryContainerLight,
    tertiary                 = valentine_tertiaryLight,
    onTertiary               = valentine_onTertiaryLight,
    tertiaryContainer        = valentine_tertiaryContainerLight,
    onTertiaryContainer      = valentine_onTertiaryContainerLight,
    error                    = valentine_errorLight,
    onError                  = valentine_onErrorLight,
    errorContainer           = valentine_errorContainerLight,
    onErrorContainer         = valentine_onErrorContainerLight,
    background               = valentine_backgroundLight,
    onBackground             = valentine_onBackgroundLight,
    surface                  = valentine_surfaceLight,
    onSurface                = valentine_onSurfaceLight,
    surfaceVariant           = valentine_surfaceVariantLight,
    onSurfaceVariant         = valentine_onSurfaceVariantLight,
    outline                  = valentine_outlineLight,
    outlineVariant           = valentine_outlineVariantLight,
    scrim                    = valentine_scrimLight,
    inverseSurface           = valentine_inverseSurfaceLight,
    inverseOnSurface         = valentine_inverseOnSurfaceLight,
    inversePrimary           = valentine_inversePrimaryLight,
    surfaceDim               = valentine_surfaceDimLight,
    surfaceBright            = valentine_surfaceBrightLight,
    surfaceContainerLowest   = valentine_surfaceContainerLowestLight,
    surfaceContainerLow      = valentine_surfaceContainerLowLight,
    surfaceContainer         = valentine_surfaceContainerLight,
    surfaceContainerHigh     = valentine_surfaceContainerHighLight,
    surfaceContainerHighest  = valentine_surfaceContainerHighestLight
)

val darkSanValentinScheme = darkColorScheme(
    primary                  = valentine_primaryDark,
    onPrimary                = valentine_onPrimaryDark,
    primaryContainer         = valentine_primaryContainerDark,
    onPrimaryContainer       = valentine_onPrimaryContainerDark,
    secondary                = valentine_secondaryDark,
    onSecondary              = valentine_onSecondaryDark,
    secondaryContainer       = valentine_secondaryContainerDark,
    onSecondaryContainer     = valentine_onSecondaryContainerDark,
    tertiary                 = valentine_tertiaryDark,
    onTertiary               = valentine_onTertiaryDark,
    tertiaryContainer        = valentine_tertiaryContainerDark,
    onTertiaryContainer      = valentine_onTertiaryContainerDark,
    error                    = valentine_errorDark,
    onError                  = valentine_onErrorDark,
    errorContainer           = valentine_errorContainerDark,
    onErrorContainer         = valentine_onErrorContainerDark,
    background               = valentine_backgroundDark,
    onBackground             = valentine_onBackgroundDark,
    surface                  = valentine_surfaceDark,
    onSurface                = valentine_onSurfaceDark,
    surfaceVariant           = valentine_surfaceVariantDark,
    onSurfaceVariant         = valentine_onSurfaceVariantDark,
    outline                  = valentine_outlineDark,
    outlineVariant           = valentine_outlineVariantDark,
    scrim                    = valentine_scrimDark,
    inverseSurface           = valentine_inverseSurfaceDark,
    inverseOnSurface         = valentine_inverseOnSurfaceDark,
    inversePrimary           = valentine_inversePrimaryDark,
    surfaceDim               = valentine_surfaceDimDark,
    surfaceBright            = valentine_surfaceBrightDark,
    surfaceContainerLowest   = valentine_surfaceContainerLowestDark,
    surfaceContainerLow      = valentine_surfaceContainerLowDark,
    surfaceContainer         = valentine_surfaceContainerDark,
    surfaceContainerHigh     = valentine_surfaceContainerHighDark,
    surfaceContainerHighest  = valentine_surfaceContainerHighestDark
)

